{
  "zodI18n": {
    "errors": {
      "custom": "Champ invalide",
      "invalid_arguments": "La fonction a reçu des arguments invalides",
      "invalid_date": "Date invalide",
      "invalid_enum_value": "La valeur '{received}' n'existe pas dans les options: {options}",
      "invalid_intersection_types": "Les résultats d'intersection n'ont pas pu être fusionnés",
      "invalid_literal": "La valeur doit être {expected}",
      "invalid_return_type": "La fonction a retourné un type invalide",
      "invalid_string": {
        "cuid": "{validation} invalide",
        "datetime": "{validation} invalide",
        "email": "{validation} invalide",
        "endsWith": "Champ invalide: doit se terminer par \"{endsWith}\"",
        "regex": "{validation} invalide",
        "startsWith": "Champ invalide: doit commencer par \"{startsWith}\"",
        "url": "{validation} invalide",
        "uuid": "{validation} invalide"
      },
      "invalid_type": "Type invalide: {expected} doit être fourni(e), mais {received} a été reçu(e)",
      "invalid_type_received_undefined": "Obligatoire",
      "invalid_union": "Champ invalide",
      "invalid_union_discriminator": "La valeur du discriminateur est invalide. Options attendus: {options}",
      "not_finite": "Le nombre doit être fini",
      "not_multiple_of": "Le nombre doit être un multiple de {multipleOf}",
      "required": "Requis",
      "too_big": {
        "array": {
          "exact": "La liste doit contenir exactement {maximum} élément(s)",
          "inclusive": "La liste doit contenir au plus {maximum} élément(s)",
          "not_inclusive": "La liste doit contenir moins de {maximum} élément(s)"
        },
        "date": {
          "exact": "La date doit être égale au {maximum}",
          "inclusive": "La date doit être inférieure ou égale au {maximum}",
          "not_inclusive": "La date doit être inférieure au {maximum}"
        },
        "number": {
          "exact": "Le nombre doit être égale à {maximum}",
          "inclusive": "Le nombre doit être inférieur ou égal à {maximum}",
          "not_inclusive": "Le nombre doit être inférieur à {maximum}"
        },
        "set": {
          "exact": "Champ invalide",
          "inclusive": "Champ invalide",
          "not_inclusive": "Champ invalide"
        },
        "string": {
          "exact": "Le texte doit contenir exactement {maximum} caractère(s)",
          "inclusive": "Le texte doit contenir au plus {maximum} caractère(s)",
          "not_inclusive": "Le texte doit contenir moins de {maximum} caractère(s)"
        }
      },
      "too_small": {
        "array": {
          "exact": "La liste doit contenir exactement {minimum} élément(s)",
          "inclusive": "La liste doit contenir au moins {minimum} élément(s)",
          "not_inclusive": "La liste doit contenir plus de {minimum} élément(s)"
        },
        "date": {
          "exact": "La date doit être égale au {minimum}",
          "inclusive": "La date doit être supérieure ou égale au {minimum} ",
          "not_inclusive": "La date doit être supérieure au {minimum}"
        },
        "number": {
          "exact": "Le nombre doit être égal à {minimum}",
          "inclusive": "Le nombre doit être supérieur ou égal à {minimum}",
          "not_inclusive": "Le nombre doit être supérieur à {minimum}"
        },
        "set": {
          "exact": "Champ invalide",
          "inclusive": "Champ invalide",
          "not_inclusive": "Champ invalide"
        },
        "string": {
          "exact": "Le texte doit contenir exactement {minimum} caractère(s)",
          "inclusive": "Le texte doit contenir au moins {minimum} caractère(s)",
          "not_inclusive": "Le texte doit centenir plus de {minimum} caractère(s)"
        }
      },
      "unrecognized_keys": "Une ou plusieurs clé(s) non reconnue(s) dans l'objet: {keys}"
    },
    "types": {
      "array": "liste",
      "bigint": "grand entier",
      "boolean": "booléen",
      "date": "date",
      "float": "décimal",
      "function": "fonction",
      "integer": "entier",
      "map": "map",
      "nan": "NaN",
      "never": "never",
      "null": "null",
      "number": "nombre",
      "object": "objet",
      "promise": "promise",
      "set": "ensemble",
      "string": "chaîne de caractères",
      "symbol": "symbole",
      "undefined": "undefined",
      "unknown": "inconnu",
      "void": "void"
    },
    "validations": {
      "cuid": "CUID",
      "datetime": "datetime",
      "email": "e-mail",
      "regex": "expression régulière",
      "url": "lien",
      "uuid": "UUID"
    }
  }
}
